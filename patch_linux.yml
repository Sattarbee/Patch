---
# ============================================================
# Play 1 – Collect list of available security patches
# ============================================================
- name: Step 1 - Generate security patch report from Linux servers
  hosts: Linux
  gather_facts: no
  tasks:
    - name: Run yum to get list of security updates
      shell: yum updateinfo list security || true
      register: patch_output

    - name: Save output to fact
      set_fact:
        patch_list: "{{ patch_output.stdout_lines | map('trim') | list }}"

# ============================================================
# Play 2 – Create CSV report on the Ansible Controller
# ============================================================
- name: Step 2 - Save patch report on Ansible control node as CSV
  hosts: localhost
  gather_facts: no
  vars:
    report_csv: "/var/tmp/security_patch_report.csv"
  tasks:
    - name: Save patch report to CSV with only host and RHSA lines
      copy:
        dest: "{{ report_csv }}"
        content: |
          Host,RHSA_Update
          {% for host in groups['Linux'] %}
          {% for line in hostvars[host].patch_list | default([]) %}
          {% if 'RHSA-' in line %}
          {{ host }},"{{ line | replace(',', ';') }}"
          {% endif %}
          {% endfor %}
          {% endfor %}

    - name: Show where CSV was saved
      debug:
        msg: "CSV report saved to {{ report_csv }}"

# ============================================================
# Play 3 – Email the report to recipients using sendmail (debug-friendly)
# ============================================================
- name: Step 3 - Email the Linux patch CSV report
  hosts: localhost
  gather_facts: no
  vars:
    report_csv: "/var/tmp/security_patch_report.csv"
    sender_email: "GPS_backup_alerts@ibm.onmicrosoft.com"
    recipients: "Sattar.Bee.Shaik@ibm.com"
    subject: "Linux Patch Report - Job #{{ tower_job_id | default('manual') }}"
    email_body: |
      Hi Team,

      Please find the attached list of patches for Linux shared servers.

      Regards,
      Automation Team

      Job #{{ tower_job_id | default('manual') }} details:
      https://platformhost/execution/jobs/playbook/{{ tower_job_id | default('manual') }}
  tasks:
    - name: Read CSV and encode in base64
      slurp:
        src: "{{ report_csv }}"
      register: csv_data

    - name: Format base64 with line wrapping (RFC compliant)
      set_fact:
        csv_base64_wrapped: "{{ csv_data.content | regex_replace('(.{76})', '\\1\n') }}"

    - name: Create email message as variable
      set_fact:
        email_message: |
          From: {{ sender_email }}
          To: {{ recipients }}
          Subject: {{ subject }}
          MIME-Version: 1.0
          Content-Type: multipart/mixed; boundary="=====MAIL_BOUNDARY====="

          --=====MAIL_BOUNDARY=====
          Content-Type: text/plain; charset="utf-8"

          {{ email_body }}

          --=====MAIL_BOUNDARY=====
          Content-Type: text/csv; name="security_patch_report.csv"
          Content-Disposition: attachment; filename="security_patch_report.csv"
          Content-Transfer-Encoding: base64

          {{ csv_base64_wrapped }}

          --=====MAIL_BOUNDARY=====--

    - name: Show the composed email message
      debug:
        var: email_message

    - name: Write message to file for inspection
      copy:
        dest: /tmp/email_message.txt
        content: "{{ email_message }}"

    - name: Try sending email using sendmail
      shell: /usr/sbin/sendmail -t
      args:
        stdin: "{{ email_message }}"
      register: sendmail_result
      ignore_errors: yes

    - name: Show sendmail result
      debug:
        var: sendmail_result

# ============================================================
# Play 4 – Copy report to Windows workstation (optional)
# ============================================================
- name: Step 4 - Copy CSV report to Windows workstation
  hosts: my_windows_pc
  gather_facts: no
  become: false
  tasks:
    - name: Copy report to Windows Downloads folder
      ansible.windows.win_copy:
        src: /var/tmp/security_patch_report.csv
        dest: C:\Users\P-SVE7FZ\Downloads\security_patch_report.csv
